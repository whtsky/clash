name: Go
on: [push, pull_request]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15.x

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Cache go module
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        env:
          NAME: clash
          BINDIR: bin
        run: make -j releases

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: bin/*
          draft: true
          prerelease: true

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14.x

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Cache go module
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Get dependencies and run test
        run: |
          go test -race -coverprofile=profile.out -covermode=atomic $(go list go list ./... | grep -v observable)
          if [ -f profile.out ]; then
            cat profile.out >> coverage.txt
            rm profile.out
          fi
          go test -coverprofile=profile.out -covermode=atomic $(go list go list ./... | grep observable)
          if [ -f profile.out ]; then
            cat profile.out >> coverage.txt
            rm profile.out
          fi
      - uses: codecov/codecov-action@v1
